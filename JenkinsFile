def notifyBuild(String buildStatus = 'STARTED') {
  // build status of null means successful
  buildStatus =  buildStatus ?: 'SUCCESS'

  // Default values
  def colorName = 'RED'
  def colorCode = '#FF0000'
  def subject = "${buildStatus}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'"
  def summary = "${subject} (${env.BUILD_URL})"

  // Override default values based on build status
  if (buildStatus == 'STARTED') {
    color = 'YELLOW'
    colorCode = '#FFFF00'
  } else if (buildStatus == 'SUCCESS') {
    color = 'GREEN'
    colorCode = '#00FF00'
  } else {
    color = 'RED'
    colorCode = '#FF0000'
  }

  // Send notifications
  slackSend (color: colorCode, message: summary)
}

node {
try{
node {
      echo "Job name is: ${env.JOB_NAME}"
      echo "Node name is: ${env.NODE_NAME}"
    def mavenHome = tool name: "Maven3.8.5"
    properties([buildDiscarder(logRotator(artifactDaysToKeepStr: '', artifactNumToKeepStr: '5', daysToKeepStr: '', numToKeepStr: '5')), pipelineTriggers([pollSCM('* * * * *')])])
    stage('CheckoutCode'){
        git branch: 'development', credentialsId: '1bf7e1d8-c4f1-4c82-a915-c1c2523ecf5f', url: 'https://github.com/Manikantamarreddi/maven-web-application.git'
    }
    stage('BuildPackage'){
	    notifyBuild('STARTED')
        sh "$mavenHome/bin/mvn clean package"
    }
    stage('SonarQubeReport'){
        sh "${mavenHome}/bin/mvn sonar:sonar"
    }
    stage('UploadingArtifactRepos'){
        sh "$mavenHome/bin/mvn deploy"
    }
    stage('DeployingToTomact'){
        sshagent(['b181401b-82df-4004-888e-6927a60b9289']) {
            sh "scp -o StrictHostKeyChecking=no target/maven-web-application.war ec2-user@3.108.252.203:/opt/apache-tomcat-9.0.62/webapps/"
}
        
    }
}
}
catch(e){
currentBuild.result = "FAILED"
throw e
}
finally{
notifyBuild(currentBuild.result)
}
}
