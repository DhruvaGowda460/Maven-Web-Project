pipeline{

agent any

options {
  timestamps(
  buildDiscarder (logRotator(artifactDaysToKeepStr: '', artifactNumToKeepStr: '3', daysToKeepStr: '', numToKeepStr: '3'))

}

triggers {
  pollSCM ('* * * * *')
  //cron ('* * * * *')
}

tools{
maven "maven3.8.6"
}
// This stage will get the source code from the github
stages{
stage('Checkoutcode'){
steps{
git branch: 'arya', credentialsId: '463455d2-e648-4285-853b-b68c9e78daa0', url: 'https://github.com/athiqathiq/maven-web-application.git'
}
}

// This stage will do the Build
stage('Build'){
steps{
sh "mvn clean package"
}
}
// This stage will be execute sonarqube report
stage('ExecutesonaeQubeReport'){
steps{
sh "mvn clean sonar:sonar"
}
}
// This stage will upload artifacts into Nexus Repo
stage('UploadArtifacotryRepo'){
steps{
sh "mvn clean deploy"
}
}

// Deploy applection into tomcatserver
stage('Deploy applection into Tomcat'){
steps{
sshagent (['54d735c9-5072-466e-a986-3c54b0cae5e2']) {
sh "scp -o StrictHostKeyChecking=no target/maven-web-application.war ec2-user@65.2.152.187:/opt/apache-tomcat-9.0.65/webapps/"
}
}
}

}//stage closing
}//pipeline closing
