pipeline{
    agent any
    tools {
  maven 'maven3.9.9'
}
options {
  buildDiscarder logRotator(artifactDaysToKeepStr: '', artifactNumToKeepStr: '5', daysToKeepStr: '', numToKeepStr: '5')
  timestamps()
//BranchName
}
parameters {
  choice choices: ['master', 'developement', 'stage', 'uat', 'performance'], description: 'select the branch', name: 'BranchName'
  string defaultValue: 'MBR', description: 'if you want to change the default value...', name: 'StringName'
}
    stages{
        stage ('git-Checkout'){
          //  sendslackNotifications('STARTED')
            steps{
SendslackNotification('STARTED')
                git credentialsId: 'e833b465-cf3e-42db-83e7-f123de389769', url: 'https://github.com/mbr-map/maven-web-application.git'
            }
        }
        stage ('Maven-Build'){
            steps{
                sh "mvn clean package"
            }
        }
        stage ('ExecuteSonarQubeReport'){
            steps{
                sh "mvn clean sonar:sonar"
            }
        }
        stage ('UploadArtifactIntoNexus'){
            steps{
                sh "mvn clean deploy"
            }
        }
        stage ('UploadAllInotTomcat'){
            steps{
                sshagent(['7256638f-4bfa-4d91-a88a-f772aa691169']) {
                    sh "scp -o  StrictHostKeyChecking=no target/maven-web-application.war ec2-user@172.31.36.136:/opt/apache-tomcat-9.0.96/webapps"
}
            }
        }
    }//closing-stages
post {
  success {
  SendslackNotification(currentBuild.result)
  }
  failure {
  SendslackNotification(currentBuild.result)
  }
}
}//pipe-closing
def SendslackNotification(String buildStatus = 'STARTED') {
  // build status of null means successful
  buildStatus =  buildStatus ?: 'SUCCESSFUL'

  // Default values
  def colorName = 'RED'
  def colorCode = '#FF0000'
  def subject = "${buildStatus}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'"
  def summary = "${subject} (${env.BUILD_URL})"

  // Override default values based on build status
  if (buildStatus == 'STARTED') {
    color = 'YELLOW'
    colorCode = '#FFFF00'
  } else if (buildStatus == 'SUCCESS') {
    color = 'GREEN'
    colorCode = '#4caf50'
  } else {
    color = 'RED'
    colorCode = '#FF0000'
  }

  // Send notifications
  slackSend (color: colorCode, message: summary, channel : '#mbr')
}
   
