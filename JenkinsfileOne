@Library('slack-notification') _

try{
 node{
    properties([parameters([choice(choices: ['development', 'master', 'uat', 'test'], description: 'Select the branch name', name: 'branchName')]), [$class: 'JobLocalConfiguration', changeReasonComment: '']])
    
    
    def mavenHome=tool name: "maven-3.8.6"
    stage('Checkout Code'){
        git branch: 'development', url: 'https://github.com/one-devops-training/maven-web-application.git'
    }
    
    stage('Build'){
        sh "${mavenHome}/bin/mvn clean package"
    }
/*
    stage('ExecuteSonarQube'){
        sh "${mavenHome}/bin/mvn clean sonar:sonar package" 
    }
    
    stage('Upload to Artifact repopsitory'){
        sh "${mavenHome}/bin/mvn clean deploy" 
    }
    
    stage('Deploy to TomCat Server'){
        sshagent(['ea8709c0-f221-4d17-892f-a70989dd7e0b']) {
            sh "scp -o StrictHostKeyChecking=no target/maven-web-application.war ec2-user@172.31.82.132:/opt/tomcat/webapps/"
        } 
    }  */
 }
}
catch(e){
    slackNotifications(${currentBuild.result})
    throw(e)
}
finally{
    slackNotifications(${currentBuild.result})
    
}

/*def slackNotifications(String buildStatus = 'STARTED') {
  // build status of null means successful
  buildStatus =  buildStatus ?: 'SUCCESSFUL'

  // Default values
  def colorName = 'RED'
  def colorCode = '#FF0000'
  def subject = "${buildStatus}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'"
  def summary = "${subject} (${env.BUILD_URL})"

  // Override default values based on build status
  if (buildStatus == 'STARTED') {
    color = 'YELLOW'
    colorCode = '#FFFF00'
  } else if (buildStatus == 'SUCCESSFUL') {
    color = 'GREEN'
    colorCode = '#00FF00'
  } else {
    color = 'RED'
    colorCode = '#FF0000'
  }

  // Send notifications
  slackSend (color: colorCode, message: summary)
}*/
