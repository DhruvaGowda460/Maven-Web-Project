pipeline{
agent any //{label "Slave Jenkins"} if we have any slave node , we can specify 
tools{
maven"maven3.8.6"
}

triggers {
  pollSCM ignorePostCommitHooks: true, scmpoll_spec: '* * * * *'
}

// poll SCM automatic build now when code updates in GIT
options {
  timestamps()
  buildDiscarder logRotator(artifactDaysToKeepStr: '', artifactNumToKeepStr: '5', daysToKeepStr: '', numToKeepStr: '5')
}  // Displays Time discard last 5 old builds


stages{
stage('CheckoutCode'){
steps{
    slackNotifications('STARTED')
    git credentialsId: 'a4c28f7a-cfcc-44f7-9a68-ee2e46dee83a', url: 'https://github.com/MVKtechnologies/maven-web-application.git'
 }  
}
stage('build'){
steps{
sh "mvn clean package"
}
}

stage('SonarQube - Reports'){
steps{
sh "mvn sonar:sonar"
}
}

stage('Nexus uploading Artifacts'){
steps{
    sh "mvn deploy"
    }
}

stage('Deploy App into Tomcat server') {
    steps{
        sshagent(['e26b4baa-b1b5-4b2e-95fa-d3c5e6ca7896'])
    {
    sh "scp -o StrictHostKeyChecking=no target/maven-web-application.war ec2-user@13.233.183.122:/opt/apache-tomcat-9.0.70/webapps/"
    }
    }
}

}// stages closing

// build success/failure message to slack
post {
  success {
      slackNotifications(currentBuild.result)
  }
  failure {
            slackNotifications(currentBuild.result)
  }
}

} // Pipeline closing

//slack notifications code

def slackNotifications(String buildStatus = 'STARTED') {
  // build status of null means successful
  buildStatus =  buildStatus ?: 'SUCCESS'
  //buildStatus = buildStatus ? "SUCCESS":"FAILURE"

  // Default values
 def colorName = 'RED'
 def colorCode = '#FF0000'
  def subject = "${buildStatus}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'"
  def summary = "${subject} (${env.BUILD_URL})"

  // Override default values based on build status
  if (buildStatus == 'STARTED') {
    colorName = 'ORANGE'
    colorCode = '#FFA500'
  } else if (buildStatus == 'SUCCESS') {
    colorName = 'GREEN'
    colorCode = '#00FF00'
  } else {
    colorName = 'RED'
    colorCode = '#FF0000'
  }

  // Send notifications
  slackSend (color: colorCode, message: summary)
}
